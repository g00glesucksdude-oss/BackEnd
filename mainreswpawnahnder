-- 🔐 Persistent Key Tracking
local keyFile = "used_keys.txt"

local function loadUsedKeys()
    local keys = {}
    if isfile(keyFile) then
        local content = readfile(keyFile)
        for line in string.gmatch(content, "[^\r\n]+") do
            keys[line] = true
        end
    end
    return keys
end

local function isUsed(raw)
    return loadUsedKeys()[raw] == true
end

local function saveUsedKey(key)
    if not isUsed(key) then
        appendfile(keyFile, key .. "\n")
    end
end

local function markUsed(raw)
    saveUsedKey(raw)
end

-- 🧬 Base64 Decoder
local b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local b64lookup = {}
for i = 1, #b64chars do
    b64lookup[b64chars:sub(i, i)] = i - 1
end

local function b64decode(data)
    data = data:gsub('[^'..b64chars..'=]', '')
    local bytes, buffer, bits = {}, 0, 0
    for i = 1, #data do
        local c = data:sub(i, i)
        if c ~= '=' then
            buffer = buffer * 64 + b64lookup[c]
            bits = bits + 6
            if bits >= 8 then
                bits = bits - 8
                table.insert(bytes, string.char(math.floor(buffer / 2^bits)))
                buffer = buffer % 2^bits
            end
        end
    end
    return table.concat(bytes):gsub("%z", "")
end

-- 🖥️ GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "KeyValidator"

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 220)
frame.Position = UDim2.new(0.5, -150, 0.5, -110)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0

local input = Instance.new("TextBox", frame)
input.Size = UDim2.new(1, -20, 0, 40)
input.Position = UDim2.new(0, 10, 0, 10)
input.PlaceholderText = "Enter your key"
input.TextScaled = true
input.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
input.TextColor3 = Color3.new(1, 1, 1)

local button = Instance.new("TextButton", frame)
button.Size = UDim2.new(1, -20, 0, 40)
button.Position = UDim2.new(0, 10, 0, 60)
button.Text = "Validate"
button.TextScaled = true
button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
button.TextColor3 = Color3.new(1, 1, 1)

local countdown = Instance.new("TextLabel", frame)
countdown.Size = UDim2.new(1, -20, 0, 30)
countdown.Position = UDim2.new(0, 10, 0, 110)
countdown.TextColor3 = Color3.new(1, 1, 1)
countdown.BackgroundTransparency = 1
countdown.TextScaled = true
countdown.Text = "Time remaining: —"

local debugLabel = Instance.new("TextLabel", frame)
debugLabel.Size = UDim2.new(1, -20, 0, 30)
debugLabel.Position = UDim2.new(0, 10, 0, 145)
debugLabel.TextColor3 = Color3.new(1, 0.8, 0.8)
debugLabel.BackgroundTransparency = 1
debugLabel.TextScaled = true
debugLabel.Text = ""

local close = Instance.new("TextButton", frame)
close.Size = UDim2.new(0, 30, 0, 30)
close.Position = UDim2.new(1, -35, 0, 5)
close.Text = "✕"
close.TextScaled = true
close.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
close.TextColor3 = Color3.new(1, 1, 1)
close.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- 🚦 Validation Logic
button.MouseButton1Click:Connect(function()
    print("🔍 Validate button clicked")
    local rawInput = input.Text:match("^%s*(.-)%s*$")

    local success, key = pcall(b64decode, rawInput)
    if not success or type(key) ~= "string" then
        countdown.Text = "❌ Decode failed"
        debugLabel.Text = "Base64 decode error"
        return
    end

    print("📥 Decoded key:", key)

    if not key:find("GGL%-sandbox%-%d+%-.+%-%d+") then
        countdown.Text = "❌ Invalid structure"
        debugLabel.Text = "Key format mismatch"
        return
    end

    local expiry = tonumber(key:match("sandbox%-(%d+)"))
    if not expiry then
        countdown.Text = "❌ No expiry found"
        debugLabel.Text = "Could not extract expiry"
        return
    end

    if os.time() > expiry then
        countdown.Text = "⏳ Key expired"
        debugLabel.Text = "Key expired"
        return
    end

    if isUsed(key) then
        countdown.Text = "🚫 Already used"
        debugLabel.Text = "Key reused"
        return
    end

    markUsed(key)
    debugLabel.Text = "✅ Key accepted"

    spawn(function()
        while os.time() <= expiry do
            local remaining = expiry - os.time()
            countdown.Text = string.format("Time remaining: %02d:%02d", math.floor(remaining / 60), remaining % 60)
            wait(1)
        end
        countdown.Text = "🛑 Key expired."
    end)

    spawn(function()
        while os.time() <= expiry do wait(1) end
        print("🛑 Key expired. Loader halted.")
    end)

    -- 🔗 Inject expiry and run teleport script
    local script = game:HttpGet("https://raw.githubusercontent.com/g00glesucksdude-oss/BackEnd/refs/heads/main/ebadeeee", true)
    local injected = string.format("local expiry = %d\n%s", expiry, script)
    loadstring(injected)()
end)
